# Create/build and start the containers specified in the compose file
docker-compose <name_of_yaml_file> up -d

# Start the containers specified in the compose file
docker-compose <name_of_yaml_file> start

# Stop and delete the containers specified in the compose file
docker-compose <name_of_yaml_file> down

# Stop (not delete) the containers specified in the compose file
docker-compose <name_of_yaml_file> stop

# Build (but will not start) the containers specified in the compose file
docker-compose <name_of_yaml_file> build

# Test the docker-compose file syntax
docker-compose config

# Check the logs
docker-compose logs

version ('3.3') - This is placed at the top of the file and is used to identify what version of Compose the docker-compose.yml is written for.

services (services:) - This instruction marks the beginning of the containers to be managed.	

name (webserver) - This instruction is where you define the container and its configuration. "name" needs to be replaced with the actual name of the container you want to define, i.e. "webserver" or "database".

build (./webserver) - This instruction defines the directory containing the Dockerfile for this container/service. (you will need to use this or an image).	

ports ('80:80') - This instruction publishes ports to the exposed ports (this depends on the image/Dockerfile).

volumes	('./home/cmnatic/webserver/:/var/www/html') - This instruction lists the directories that should be mounted into the container from the host operating system.	
environment (MYSQL_ROOT_PASSWORD=helloworld) - This instruction is used to pass environment variables (not secure), i.e. passwords, usernames, timezone configurations, etc.	

image (MySQL:latest) - This instruction defines what image the container should be built with (you will need to use this or build).	


networks (ecommerce) - This instruction defines what networks the containers will be a part of. Containers can be part of multiple networks (i.e. a web server can only contact one database, but the database can contact multiple web servers).	





